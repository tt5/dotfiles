# If not running interactively, don't do anything
case $- in
    *i*) ;;
      *) return;;
esac

stty -ixon # disable flow control C-S; C-Q
shopt -s checkwinsize
shopt -s no_empty_cmd_completion
shopt -s histappend
shopt -s extglob
shopt -s cmdhist
shopt -s cdspell
shopt -s histverify

HISTCONTROL=ignoreboth:erasedups
HISTFILESIZE=100000
HISTSIZE=100000
HISTIGNORE='a:b:c:d:e:f:g:h:i:j:k:l:m:n:o:p:q:r:s:t:u:v:w:x:y:z'
HISTIGNORE+=':fg:cd:ls'

# If set, the pattern "**" used in a pathname expansion context will
# match all files and zero or more directories and subdirectories.
#shopt -s globstar

# make less more friendly for non-text input files, see lesspipe(1)
#[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "${debian_chroot:-}" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
    xterm-color|*-256color) color_prompt=yes;;
esac

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    #alias dir='dir --color=auto'
    #alias vdir='vdir --color=auto'

    #alias grep='grep --color=auto'
    #alias fgrep='fgrep --color=auto'
    #alias egrep='egrep --color=auto'
fi

# colored GCC warnings and errors
#export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01'

# some more ls aliases
#alias ll='ls -l'
#alias la='ls -A'
#alias l='ls -CF'

# Alias definitions.
# You may want to put all your additions into a separate file like
# ~/.bash_aliases, instead of adding them here directly.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.

if [ -f ~/.bash_aliases ]; then
    . ~/.bash_aliases
fi

PS1='$ '

# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('/home/n/miniconda3/bin/conda' 'shell.bash' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "/home/n/miniconda3/etc/profile.d/conda.sh" ]; then
        . "/home/n/miniconda3/etc/profile.d/conda.sh"
    else
        export PATH="/home/n/miniconda3/bin:$PATH"
    fi
fi
unset __conda_setup
# <<< conda initialize <<<


export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
. "$HOME/.cargo/env"

export GOPATH=${HOME}/mygo
export PATH="$GOPATH/bin:$PATH"
export PATH="$HOME/data/d/zig-linux-x86_64-0.10.0-dev.3685+dae7aeb33:$PATH"

export BAT_THEME="ansi-dark"

export _JAVA_AWT_WM_NONREPARENTING=1
export AWT_TOOLKIT=MToolkit

export GDK_BACKEND=wayland # unset for electron apps
export QT_QPA_PLATFORM=wayland
export QT_QPA_PLATFORMTHEME=qt5ct
export CLUTTER_BACKEND=wayland
export SDL_VIDEODRIVER=wayland

export XDG_SESSION_TYPE=wayland
export XDG_SESSION_DESKTOP=sway
export XDG_CURRENT_DESKTOP=sway

# Wasmer
export WASMER_DIR="/home/n/.wasmer"
[ -s "$WASMER_DIR/wasmer.sh" ] && source "$WASMER_DIR/wasmer.sh"

BUN_INSTALL="/home/n/.bun"
PATH="$BUN_INSTALL/bin:$PATH"

export KO_DOCKER_REPO=63061

export PATH="${KREW_ROOT:-$HOME/.krew}/bin:$PATH"

#THIS MUST BE AT THE END OF THE FILE FOR SDKMAN TO WORK!!!
export SDKMAN_DIR="$HOME/.sdkman"
[[ -s "$HOME/.sdkman/bin/sdkman-init.sh" ]] && source "$HOME/.sdkman/bin/sdkman-init.sh"


#export CDPATH=.:~
#
#export HISTTIMEFORMAT='%F %T  '
#
#log_bash_persistent_history()
#{
#  local rc=$?
#  [[ $(history 1) =~ ^\ *[0-9]+\ +([^\ ]+\ [^\ ]+)\ +(.*)$ ]]
#  local date_part="${BASH_REMATCH[1]}"
#  local command_part="${BASH_REMATCH[2]}"
#  if [ "$command_part" != "$PERSISTENT_HISTORY_LAST" ]
#  then
#    echo $date_part "|" "$command_part" >> ~/.persistent_history
#    export PERSISTENT_HISTORY_LAST="$command_part"
#  fi
#}
#
## Stuff to do on PROMPT_COMMAND
#run_on_prompt_command()
#{
#    log_bash_persistent_history
#}
#
#if [ "$PROMPT_COMMAND" = "" ]
#then
#    PROMPT_COMMAND="run_on_prompt_command"
#else
#    PROMPT_COMMAND="run_on_prompt_command; ""$PROMPT_COMMAND"
#fi


[ -f "/home/n/.ghcup/env" ] && source "/home/n/.ghcup/env" # ghcup-env